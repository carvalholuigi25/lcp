// <auto-generated />
using System;
using LCPApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LCPApi.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20231113101149_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LCPApi.Models.Categories", b =>
                {
                    b.Property<int>("CategoriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriesId"));

                    b.Property<string>("CategoriesDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectsId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LCPApi.Models.Customers", b =>
                {
                    b.Property<int>("CustomersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomersId"));

                    b.Property<string>("CustomersCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomersCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CustomersDateBirthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CustomersDateRegistered")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomersEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomersFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomersJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomersLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomersName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomersPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomersPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomersPin")
                        .HasColumnType("int");

                    b.Property<string>("CustomersPostalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomersRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomersStateProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomersZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomersId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("LCPApi.Models.Departments", b =>
                {
                    b.Property<int>("DepartmentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentsId"));

                    b.Property<string>("DepartmentsDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentsType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectsId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentsId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("LCPApi.Models.Employees", b =>
                {
                    b.Property<int>("EmployeesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeesId"));

                    b.Property<string>("EmployeesCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeesCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EmployeesDateBirthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EmployeesDateRegistered")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeesEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeesFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeesJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeesLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeesPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeesPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeesPin")
                        .HasColumnType("int");

                    b.Property<string>("EmployeesPostalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeesRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeesStateProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeesZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeesId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("LCPApi.Models.Feedbacks", b =>
                {
                    b.Property<int>("FeedbacksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbacksId"));

                    b.Property<int?>("CommentsId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomersId")
                        .HasColumnType("int");

                    b.Property<string>("FeedbacksAssignBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FeedbacksDateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeedbacksDateLocked")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeedbacksDateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FeedbacksDownvotes")
                        .HasColumnType("int");

                    b.Property<string>("FeedbacksMsg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FeedbacksStatus")
                        .HasColumnType("int");

                    b.Property<string>("FeedbacksTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FeedbacksUpvotes")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectsId")
                        .HasColumnType("int");

                    b.HasKey("FeedbacksId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("LCPApi.Models.FeedbacksComments", b =>
                {
                    b.Property<int>("FeedbacksCommentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbacksCommentsId"));

                    b.Property<int?>("CustomersId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FeedbacksCommentsDateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeedbacksCommentsDateLocked")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeedbacksCommentsDateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FeedbacksCommentsDownvotes")
                        .HasColumnType("int");

                    b.Property<string>("FeedbacksCommentsMsg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FeedbacksCommentsStatus")
                        .HasColumnType("int");

                    b.Property<int?>("FeedbacksCommentsUpvotes")
                        .HasColumnType("int");

                    b.Property<int?>("FeedbacksId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectsId")
                        .HasColumnType("int");

                    b.HasKey("FeedbacksCommentsId");

                    b.ToTable("FeedbacksComments");
                });

            modelBuilder.Entity("LCPApi.Models.Orders", b =>
                {
                    b.Property<int>("OrdersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdersId"));

                    b.Property<double>("ItemDiscount")
                        .HasColumnType("float");

                    b.Property<double>("ItemPrice")
                        .HasColumnType("float");

                    b.Property<double>("ItemStock")
                        .HasColumnType("float");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrdersId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("LCPApi.Models.OrdersCustomers", b =>
                {
                    b.Property<int>("OrdersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdersId"));

                    b.Property<int?>("CustomersId")
                        .HasColumnType("int");

                    b.HasKey("OrdersId");

                    b.ToTable("OrdersCustomers");
                });

            modelBuilder.Entity("LCPApi.Models.Products", b =>
                {
                    b.Property<int>("ProductsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductsId"));

                    b.Property<int?>("CustomersId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ProductsDateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProductsDateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductsDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductsGallery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductsImageMain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ProductsIsFeatured")
                        .HasColumnType("bit");

                    b.Property<double?>("ProductsPrice")
                        .HasColumnType("float");

                    b.Property<string>("ProductsTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductsType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductsId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("LCPApi.Models.ProductsProjects", b =>
                {
                    b.Property<int>("ProductsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductsId"));

                    b.Property<int?>("ProjectsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId");

                    b.ToTable("ProductsProjects");
                });

            modelBuilder.Entity("LCPApi.Models.ProductsSubscriptions", b =>
                {
                    b.Property<int>("ProductsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductsId"));

                    b.Property<int?>("SubscriptionsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId");

                    b.ToTable("ProductsSubscriptions");
                });

            modelBuilder.Entity("LCPApi.Models.Projects", b =>
                {
                    b.Property<int>("ProjectsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectsId"));

                    b.Property<double?>("ProjectsBudgetCost")
                        .HasColumnType("float");

                    b.Property<int?>("ProjectsBudgetDays")
                        .HasColumnType("int");

                    b.Property<string>("ProjectsCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectsCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProjectsDateClose")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProjectsDateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProjectsDateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectsDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectsOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ProjectsPriority")
                        .HasColumnType("bit");

                    b.Property<int?>("ProjectsRecords")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectsStatus")
                        .HasColumnType("int");

                    b.HasKey("ProjectsId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("LCPApi.Models.ProjectsPhases", b =>
                {
                    b.Property<int>("ProjectsPhasesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectsPhasesId"));

                    b.Property<int?>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectsPhasesActivities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProjectsPhasesDateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProjectsPhasesDateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectsPhasesDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectsPhasesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectsPhasesStatus")
                        .HasColumnType("int");

                    b.Property<int?>("TasksId")
                        .HasColumnType("int");

                    b.HasKey("ProjectsPhasesId");

                    b.ToTable("ProjectsPhases");
                });

            modelBuilder.Entity("LCPApi.Models.Subscriptions", b =>
                {
                    b.Property<int>("SubscriptionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionsId"));

                    b.Property<int?>("CustomersId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SubscriptionsDateEnded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SubscriptionsDatePurchased")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubscriptionsDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionsImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SubscriptionsIsExpired")
                        .HasColumnType("bit");

                    b.Property<string>("SubscriptionsTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionsType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubscriptionsId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("LCPApi.Models.SubscriptionsKeys", b =>
                {
                    b.Property<int>("SubscriptionsKeysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionsKeysId"));

                    b.Property<int?>("SubscriptionsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SubscriptionsKeysDateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SubscriptionsKeysDateStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SubscriptionsKeysDateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubscriptionsKeysStatus")
                        .HasColumnType("int");

                    b.Property<string>("SubscriptionsKeysValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubscriptionsKeysId");

                    b.ToTable("SubscriptionsKeys");
                });

            modelBuilder.Entity("LCPApi.Models.Tasks", b =>
                {
                    b.Property<int>("TasksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TasksId"));

                    b.Property<int?>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectsId")
                        .HasColumnType("int");

                    b.Property<string>("TasksDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TasksDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TasksDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TasksEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TasksName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TasksOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TasksPhaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TasksPriority")
                        .HasColumnType("int");

                    b.Property<string>("TasksProject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TasksReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TasksReviewReport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TasksStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TasksStatus")
                        .HasColumnType("int");

                    b.Property<string>("TasksTeam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TasksType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TasksId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("LCPApi.Models.TasksTypes", b =>
                {
                    b.Property<int>("TasksTypesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TasksTypesId"));

                    b.Property<int?>("TasksId")
                        .HasColumnType("int");

                    b.Property<string>("TasksTypesDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TasksTypesId");

                    b.ToTable("TasksTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
