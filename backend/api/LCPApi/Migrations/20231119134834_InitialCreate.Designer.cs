// <auto-generated />
using System;
using LCPApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LCPApi.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20231119134834_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LCPApi.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LCPApi.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CustomerDateBirthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CustomerDateRegistered")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerPin")
                        .HasColumnType("int");

                    b.Property<string>("CustomerPostalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStateProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("LCPApi.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("LCPApi.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("EmployeeCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EmployeeDateBirthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EmployeeDateRegistered")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeePassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeePhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeePin")
                        .HasColumnType("int");

                    b.Property<string>("EmployeePostalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeStateProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("LCPApi.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<int?>("CommentId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("FeedbackAssignBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FeedbackDateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeedbackDateLocked")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeedbackDateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FeedbackDownvotes")
                        .HasColumnType("int");

                    b.Property<string>("FeedbackMsg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FeedbackStatus")
                        .HasColumnType("int");

                    b.Property<string>("FeedbackTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FeedbackUpvotes")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("LCPApi.Models.FeedbackComment", b =>
                {
                    b.Property<int>("FeedbackCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackCommentId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FeedbackCommentDateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeedbackCommentDateLocked")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FeedbackCommentDateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FeedbackCommentDownvotes")
                        .HasColumnType("int");

                    b.Property<string>("FeedbackCommentMsg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FeedbackCommentStatus")
                        .HasColumnType("int");

                    b.Property<int?>("FeedbackCommentUpvotes")
                        .HasColumnType("int");

                    b.Property<int?>("FeedbackId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("FeedbackCommentId");

                    b.ToTable("FeedbacksComments");
                });

            modelBuilder.Entity("LCPApi.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<double>("ItemDiscount")
                        .HasColumnType("float");

                    b.Property<double>("ItemPrice")
                        .HasColumnType("float");

                    b.Property<double>("ItemStock")
                        .HasColumnType("float");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("LCPApi.Models.OrderCustomer", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.ToTable("OrdersCustomers");
                });

            modelBuilder.Entity("LCPApi.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ProductDateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProductDateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductGallery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductImageMain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ProductIsFeatured")
                        .HasColumnType("bit");

                    b.Property<double?>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<string>("ProductTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("LCPApi.Models.ProductProject", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("ProductsProjects");
                });

            modelBuilder.Entity("LCPApi.Models.ProductSubscription", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("ProductsSubscriptions");
                });

            modelBuilder.Entity("LCPApi.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<double?>("ProjectBudgetCost")
                        .HasColumnType("float");

                    b.Property<int?>("ProjectBudgetDays")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProjectDateClose")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProjectDateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProjectDateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ProjectPriority")
                        .HasColumnType("bit");

                    b.Property<int?>("ProjectRecords")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectStatus")
                        .HasColumnType("int");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("LCPApi.Models.ProjectPhase", b =>
                {
                    b.Property<int>("ProjectPhaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectPhaseId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectPhaseActivities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProjectPhaseDateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProjectPhaseDateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectPhaseDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectPhaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectPhaseStatus")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("ProjectPhaseId");

                    b.ToTable("ProjectsPhases");
                });

            modelBuilder.Entity("LCPApi.Models.ProjectTask", b =>
                {
                    b.Property<int>("ProjectTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectTaskId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectTaskDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTaskDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTaskDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProjectTaskEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectTaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTaskOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTaskPhaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectTaskPriority")
                        .HasColumnType("int");

                    b.Property<string>("ProjectTaskProject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProjectTaskReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectTaskReviewReport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProjectTaskStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectTaskStatus")
                        .HasColumnType("int");

                    b.Property<string>("ProjectTaskTeam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTaskType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectTaskId");

                    b.ToTable("ProjectTasks");
                });

            modelBuilder.Entity("LCPApi.Models.ProjectTaskType", b =>
                {
                    b.Property<int>("ProjectTaskTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectTaskTypeId"));

                    b.Property<int?>("ProjectTaskId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectTaskTypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectTaskTypeId");

                    b.ToTable("ProjectTasksTypes");
                });

            modelBuilder.Entity("LCPApi.Models.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SubscriptionDateEnded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SubscriptionDatePurchased")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubscriptionDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SubscriptionIsExpired")
                        .HasColumnType("bit");

                    b.Property<string>("SubscriptionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubscriptionId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("LCPApi.Models.SubscriptionKey", b =>
                {
                    b.Property<int>("SubscriptionKeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionKeyId"));

                    b.Property<int?>("SubscriptionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SubscriptionKeyDateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SubscriptionKeyDateStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SubscriptionKeyDateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubscriptionKeyStatus")
                        .HasColumnType("int");

                    b.Property<string>("SubscriptionKeyValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubscriptionKeyId");

                    b.ToTable("SubscriptionsKeys");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("LCPApi.Models.Product", b =>
                {
                    b.HasOne("LCPApi.Models.Customer", "Customers")
                        .WithMany("Products")
                        .HasForeignKey("CustomerId");

                    b.HasOne("LCPApi.Models.Employee", "Employees")
                        .WithMany("Products")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Customers");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("LCPApi.Models.Customer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("LCPApi.Models.Employee", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
